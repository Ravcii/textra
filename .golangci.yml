run:
  # Timeout for analysis, e.g. 30s, 5m.
  timeout: 30s

  # Exit code when at least one issue was found.
  issues-exit-code: 2

  # Include test files or not.
  tests: true
  modules-download-mode: readonly
  allow-parallel-runners: true
  go: "1.19"

output:
  # Sort results by: filepath, line and column.
  sort-results: true

linters:
  # Enabling all linters.
  enable-all: true

  # Disabling deprecated linters
  disable:
    - bodyclose
    - contextcheck
    - deadcode
    - dupl
    - exhaustivestruct
    - exhaustruct
    - golint
    - ifshort
    - interfacer
    - maligned
    - nilerr
    - noctx
    - nonamedreturns
    - nosnakecase
    - rowserrcheck
    - scopelint
    - sqlclosecheck
    # - structcheck
    - tparallel
    - unparam
    - varcheck
    - varnamelen
    - wastedassign

linters-settings:
  gomnd:
    checks:
      - argument
      # - case
      - condition
      - operation
      - return
      - assign
    ignored-functions:
      # Ignoring any str>int parsing functions because they ask for
      # base and bit size.
      - "strconv.Parse*"
      - "make*"

  tagliatelle:
    case:
      use-field-name: true
      rules:
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`,
        # `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake
  
  revive:
    rules:
      - name: exported
        arguments:
          - disableStutteringCheck

  nlreturn:
    # Size of the block (including return statement that is still "OK")
    # so no return split required.
    block-size: 3

  maligned:
    # Print struct with more effective memory layout or not.
    suggest-new: true

issues:
  include:
    - EXC0012  # EXC0012 revive: Annoying issue about not having a comment. The rare codebase has such comments
    - EXC0014  # EXC0014 revive: Annoying issue about not having a comment. The rare codebase has such comments